matrix:
  include:
    # windows native
#    - os: windows
#      language: cpp
#      cache:
#        directories:
#          - /c/Users/travis/.hunter/
#      env:
#        - BUILD_TYPE=native
#        - MSBUILD_PATH="c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin"
#      install:
#        - PowerShell -Command 'Set-ExecutionPolicy -ExecutionPolicy RemoteSigned'
##        - choco install -y visualstudio2017-workload-vctools
#      script:
#        - export PATH=$MSBUILD_PATH:$PATH
#        - git submodule update --init --recursive
#        - cmake --version
#        - PowerShell -Command 'cmake --version'
#        - cmake -Bbuild -H. -G "Visual Studio 15 2017 Win64" -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=dependencies/polly/vs-15-2017-win64.cmake
#        - PowerShell -Command 'cmake --build build'
##        - cd build && msbuild.exe Engine.sln
#
#    # linux android
#    - os: linux
#      dist: xenial
#      android:
#        components:
#          - build-tools-24.0.1
#          - android-24
#          - add-on
#          - extra
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - clang
#            - gcc
#            - g++
#      env:
#        - BUILD_TYPE=android
#        - MATRIX_EVAL="CC=clang && CXX=clang++"
#      language: android
#      before_cache:
#        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
#        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
#      cache:
#        directories:
#          - $HOME/.gradle/caches/
#          - $HOME/.gradle/wrapper/
#          - $HOME/.android/build-cache
#      install:
#        - sudo add-apt-repository -y ppa:openjdk-r/ppa
#        - sudo apt-get update
#        - sudo apt-get install -y openjdk-8-jdk
#        - java -version
#        - javac -version
##        - echo 0 | sudo update-alternatives --config java
#        - wget --quiet --continue https://github.com/Kitware/CMake/releases/download/v3.14.0-rc3/cmake-3.14.0-rc3-Linux-x86_64.sh
#        - chmod +x cmake-3.14.0-rc3-Linux-x86_64.sh
#        - sudo mkdir /opt/cmake
#        - sudo ./cmake-3.14.0-rc3-Linux-x86_64.sh --prefix=/opt/cmake --skip-license
#        - sudo rm -rf /usr/bin/cmake /usr/local/bin/cmake
#        - sudo ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
#        - sudo ln -s /opt/cmake/bin/cmake /usr/bin/cmake
#        - cmake --version
#        - wget --quiet --continue http://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip -O ndk.zip
#        - unzip -o -q ndk.zip
#        - export ANDROID_NDK=`pwd`/android-ndk-r18b
#        - export ANDROID_NDK_r18b=`pwd`/android-ndk-r18b
#        - mkdir android-sdk-linux
#        - wget --quiet --continue https://dl.google.com/android/repository/tools_r25.2.5-linux.zip -O android-sdk-linux/sdk.zip
#        - cd android-sdk-linux ; unzip -o -q sdk.zip ; cd ..
#        - export ANDROID_SDK=`pwd`/android-sdk-linux
#        - export ANDROID_HOME=$ANDROID_SDK
#        - export PATH=${ANDROID_SDK}/tools:${ANDROID_SDK}/tools/bin:${PATH}
#        - touch /home/travis/.android/repositories.cfg
#        - echo y | sdkmanager 'build-tools;24.0.1'
#        - echo y | sdkmanager 'platforms;android-24'
#        - echo y | sdkmanager 'platform-tools'
#        - export PATH=${ANDROID_SDK}/platform-tools:${ANDROID_NDK}:${PATH}
#      script:
#        - ./scripts/cmake-android.sh
##      android:
##        components:
#          # Uncomment the lines below if you want to
#          # use the latest revision of Android SDK Tools
#          # - tools
#          # - platform-tools
#
#          # The BuildTools version used by your project
##          - build-tools-26.0.2
#
#          # The SDK version used to compile your project
##          - android-26
#
#          # Additional components
##          - extra-google-google_play_services
##          - extra-google-m2repository
##          - extra-android-m2repository
#
#          # Specify at least one system image,
#          # if you need to run emulator(s) during your tests
##          - sys-img-x86-android-26
##          - sys-img-armeabi-v7a-android-17


    # linux native
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang
            - gcc
            - g++
            - cmake
            - clang
            - git
            - build-essential
            - libgl1-mesa-dev
      env:
        - BUILD_TYPE=native
        - MATRIX_EVAL="CC=clang && CXX=clang++"
      dist: xenial
      language: cpp
      compiler: clang
      script:
        - cmake --version
        - ./scripts/travis-build.sh

    # linux emscripten
    - os: linux
#      jdk: openjdk8
      services:
        - docker
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - build-essential
      env:
        - BUILD_TYPE=emscripten
      group: travis_latest
      dist: xenial
      language: cpp
      compiler: emscripten
      install:
        - cmake --version
        - ./dependencies/emsdk/emsdk install sdk-1.38.12-64bit
        - ./dependencies/emsdk/emsdk activate sdk-1.38.12-64bit
      script:
        - ./scripts/travis-build.sh
        - ./scripts/travis-build.sh

    # osx native
    - os: osx
      env:
        - BUILD_TYPE=native
        - MATRIX_EVAL="CC=gcc && CXX=g++"
      language: cpp
      compiler: cpp
      install:
        - brew upgrade cmake
        - cmake --version
      script:
        - ./scripts/travis-build.sh

#    # osx android
#    - os: osx
#      env:
#        - BUILD_TYPE=android
#      osx_image: xcode9.3
#      language: cpp
#      install:
#        - TRAVIS_TAG=`date +%Y-%m-%d`
#        - brew tap caskroom/cask
#        - brew update
#        - brew cask install caskroom/versions/java8
#        - brew install ant
#        - wget --quiet --continue https://dl.google.com/android/repository/android-ndk-r18b-darwin-x86_64.zip -O ndk.zip
#        - unzip -o -q ndk.zip
#        - export ANDROID_NDK=`pwd`/android-ndk-r18b
#        - export ANDROID_NDK_r18b=`pwd`/android-ndk-r18b
#        - mkdir android-sdk-macosx
#        - wget --quiet --continue https://dl.google.com/android/repository/tools_r25.2.5-macosx.zip -O android-sdk-macosx/sdk.zip
#        - cd android-sdk-macosx ; unzip -o -q sdk.zip ; cd ..
#        - export ANDROID_SDK=`pwd`/android-sdk-macosx
#        - export ANDROID_HOME=$ANDROID_SDK
#        - export PATH=${ANDROID_SDK}/tools:${ANDROID_SDK}/tools/bin:${PATH}
#        - echo y | sdkmanager 'build-tools;24.0.1' 'platforms;android-24' 'platform-tools'
#        - export PATH=${ANDROID_SDK}/platform-tools:${ANDROID_NDK}:${PATH}
#      script:
#        - ./scripts/cmake-android.sh

before_script:
  - TRAVIS_TAG=`date +%Y-%m-%d`
#  - TRAVIS_TAG=`git tag | grep -v rc | sort -t. -k 1,1n -k 2,2n -k 3,3n -k 4,4n | sed '1!G;h;$!d' | sed -n 1p`
  - uname -a

before_deploy:
  - echo tolsta $TRAVIS_OS_NAME $BUILD_TYPE $TRAVIS_BRANCH $TRAVIS_TAG

deploy:
  - provider: releases
    api_key:
      secure: MfsqovFmQorr7+r1Y0SlKpfi4SlCCLzkzefCMDDRtnib8h5oWt6ZlNxpQP2EwIx9QVsF3RR+BucRiQ/jc1daeQgBSRjUyTJAFRutigFvNbcoCZ5f3a1VAI1EqmBaDuMKdimtd9KEpYfJhI92tgVz2nf/CmcYYV0ylz5/R5KC8qJbGyhlww8Brcij2s1/yUtiLsupeBsfpmx9t96HcRDCnSD27h5mP3SANeTT1u2NJJtLXLFEmz/Zk6M3ziDKuw7Dvu7fZL7gUH2ofC6+9Q3bSLbTIsSYMbC9gWrdbWNPSWiSK/hd4Y8yB3KwDqLP7jJ/2sLze9NlyDftdGHoazC6Cyq0FmUyQkLUXSH6y7XyzoHuSMhy9Z07HoHRjcm3HxOPE5nfxDDsAKuPcyW9wS5E/Z/MNBHcJdwOacRic+haA88kXvo1Gg5XgayBch5EHYPod6hTdUC7U3y3LW2fmhIvSG8jU+lkkKdb3cY6wd9iGMyJuWjXcvYVMsjCGW5I8hdC4ntWDh0dFAtZd+MStH4mUuuAYBVvBDiVkc8UxF8WP5ZwP3WSwdGm6z867Hg+tI3osqP9yDfuEHWilBJLZQzDE93DyOQtfKabmQHQU6mRUZS0DY2h8z5Tz0GOAI6xmUmNbr16yrPdgDJzqBygpiKFiZUsET+XZEjEnAMUB/h8hhg=
    file: $TRAVIS_BUILD_DIR/win64mingw.zip
    skip_cleanup: true
    on:
      repo: InfiniBrains/mobagen
      condition: $BUILD_TYPE = windows
      os: linux
      branches:
        except:
          - gh-pages

  - provider: releases
    api_key:
      secure: MfsqovFmQorr7+r1Y0SlKpfi4SlCCLzkzefCMDDRtnib8h5oWt6ZlNxpQP2EwIx9QVsF3RR+BucRiQ/jc1daeQgBSRjUyTJAFRutigFvNbcoCZ5f3a1VAI1EqmBaDuMKdimtd9KEpYfJhI92tgVz2nf/CmcYYV0ylz5/R5KC8qJbGyhlww8Brcij2s1/yUtiLsupeBsfpmx9t96HcRDCnSD27h5mP3SANeTT1u2NJJtLXLFEmz/Zk6M3ziDKuw7Dvu7fZL7gUH2ofC6+9Q3bSLbTIsSYMbC9gWrdbWNPSWiSK/hd4Y8yB3KwDqLP7jJ/2sLze9NlyDftdGHoazC6Cyq0FmUyQkLUXSH6y7XyzoHuSMhy9Z07HoHRjcm3HxOPE5nfxDDsAKuPcyW9wS5E/Z/MNBHcJdwOacRic+haA88kXvo1Gg5XgayBch5EHYPod6hTdUC7U3y3LW2fmhIvSG8jU+lkkKdb3cY6wd9iGMyJuWjXcvYVMsjCGW5I8hdC4ntWDh0dFAtZd+MStH4mUuuAYBVvBDiVkc8UxF8WP5ZwP3WSwdGm6z867Hg+tI3osqP9yDfuEHWilBJLZQzDE93DyOQtfKabmQHQU6mRUZS0DY2h8z5Tz0GOAI6xmUmNbr16yrPdgDJzqBygpiKFiZUsET+XZEjEnAMUB/h8hhg=
    file: $TRAVIS_BUILD_DIR/emscripten.zip
    skip_cleanup: true
    on:
      repo: InfiniBrains/mobagen
      condition: $BUILD_TYPE = emscripten
      os: linux
      branches:
        except:
          - gh-pages

  - provider: releases
    api_key:
      secure: MfsqovFmQorr7+r1Y0SlKpfi4SlCCLzkzefCMDDRtnib8h5oWt6ZlNxpQP2EwIx9QVsF3RR+BucRiQ/jc1daeQgBSRjUyTJAFRutigFvNbcoCZ5f3a1VAI1EqmBaDuMKdimtd9KEpYfJhI92tgVz2nf/CmcYYV0ylz5/R5KC8qJbGyhlww8Brcij2s1/yUtiLsupeBsfpmx9t96HcRDCnSD27h5mP3SANeTT1u2NJJtLXLFEmz/Zk6M3ziDKuw7Dvu7fZL7gUH2ofC6+9Q3bSLbTIsSYMbC9gWrdbWNPSWiSK/hd4Y8yB3KwDqLP7jJ/2sLze9NlyDftdGHoazC6Cyq0FmUyQkLUXSH6y7XyzoHuSMhy9Z07HoHRjcm3HxOPE5nfxDDsAKuPcyW9wS5E/Z/MNBHcJdwOacRic+haA88kXvo1Gg5XgayBch5EHYPod6hTdUC7U3y3LW2fmhIvSG8jU+lkkKdb3cY6wd9iGMyJuWjXcvYVMsjCGW5I8hdC4ntWDh0dFAtZd+MStH4mUuuAYBVvBDiVkc8UxF8WP5ZwP3WSwdGm6z867Hg+tI3osqP9yDfuEHWilBJLZQzDE93DyOQtfKabmQHQU6mRUZS0DY2h8z5Tz0GOAI6xmUmNbr16yrPdgDJzqBygpiKFiZUsET+XZEjEnAMUB/h8hhg=
    skip_cleanup: true
    file: $TRAVIS_BUILD_DIR/linux.zip
    on:
      repo: InfiniBrains/mobagen
      condition: $BUILD_TYPE = native
      os: linux
      branches:
        except:
          - gh-pages

  - provider: releases
    api_key:
      secure: MfsqovFmQorr7+r1Y0SlKpfi4SlCCLzkzefCMDDRtnib8h5oWt6ZlNxpQP2EwIx9QVsF3RR+BucRiQ/jc1daeQgBSRjUyTJAFRutigFvNbcoCZ5f3a1VAI1EqmBaDuMKdimtd9KEpYfJhI92tgVz2nf/CmcYYV0ylz5/R5KC8qJbGyhlww8Brcij2s1/yUtiLsupeBsfpmx9t96HcRDCnSD27h5mP3SANeTT1u2NJJtLXLFEmz/Zk6M3ziDKuw7Dvu7fZL7gUH2ofC6+9Q3bSLbTIsSYMbC9gWrdbWNPSWiSK/hd4Y8yB3KwDqLP7jJ/2sLze9NlyDftdGHoazC6Cyq0FmUyQkLUXSH6y7XyzoHuSMhy9Z07HoHRjcm3HxOPE5nfxDDsAKuPcyW9wS5E/Z/MNBHcJdwOacRic+haA88kXvo1Gg5XgayBch5EHYPod6hTdUC7U3y3LW2fmhIvSG8jU+lkkKdb3cY6wd9iGMyJuWjXcvYVMsjCGW5I8hdC4ntWDh0dFAtZd+MStH4mUuuAYBVvBDiVkc8UxF8WP5ZwP3WSwdGm6z867Hg+tI3osqP9yDfuEHWilBJLZQzDE93DyOQtfKabmQHQU6mRUZS0DY2h8z5Tz0GOAI6xmUmNbr16yrPdgDJzqBygpiKFiZUsET+XZEjEnAMUB/h8hhg=
    file: $TRAVIS_BUILD_DIR/osx.zip
    skip_cleanup: true
    on:
      repo: InfiniBrains/mobagen
      condition: $BUILD_TYPE = native
      os: osx
      branches:
        except:
        - gh-pages

  - provider: pages
    skip-cleanup: true
    github-token: $GITHUB_TOKEN
    local-dir: bin-emscripten/bin
    on:
      repo: InfiniBrains/mobagen
      condition: $BUILD_TYPE = emscripten
      branches:
        only:
          - master

notifications:
  slack:
    secure: JF/jKEEB8HW8eoi0NgGvLcLKV/wg/Nf8K4+CLRc+fdvrIN7fTgZv1nzompuSu7TBiJv4o4hqVUAoM0PNRQe/rNtByF1dZN7YO46Z9X9mI882euhEGx99dNZeifgTgiq/e9LaZy8S/5CuX6Wna8s4kNmrYVHOXtrYb1mRKWX8OaLaVni77CvacnUJZ5l0HS9cGTY9fw5ERNrefMnYHWTsXhKeM+BzMt+/uQavg/lBG8VN9yQx6mLi9XAqJSGQcNLti0iczFIirmHgJdTh7EMSrO/Lneo7lT3tx5Ql7tJXHHacRM3Hlsz3zNwKd0ZXunjPKEoY394YWnT/mbKYKAV8e4MJflSmJEwDezY6BhZbeEXLIpFtxoQ+yMoIYMKJczfqd0DY5Y8YlkQvtFBK3WE68Z8rfJG8TqJzdQ0WcaGOIFRUIqB5cyI2O+/Wm/mGD6IUeY4Sjx7dbZmV0ZejZCx3iHFqDjLUClNTT8EktdjAhVrWC3dPuYFzs8FoqiryM8unX4FfBu0uSL1rlbg/ZIKeKaklZJcyLbsi8RVpd+9nqbPdlmVervC/aXwdVXpJL7QCbRmTBlZN1Apn01r15Mv5xih2zjK46dAezkBomXfBnjFsPoFM7r11lZfij/Mj0M0UJb8NYB/ETFuHvlr0gAmCqmym8TeQy+lDcqaNi8ygN0g=
