matrix:
  include:
    # linux native
    - os: linux
      addons:
        apt:
#          sources:
          packages:
            - clang
            - cmake
            - git
            - build-essential
            - libgl1-mesa-dev
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_TYPE=native
      group: travis_latest
      dist: xenial
      language: cpp
      compiler: clang

    - os: windows
      language: cpp
      cache:
        directories:
        - /c/Users/travis/.hunter/
      env:
        - BUILD_TYPE=native
      script:
        - git submodule update --init --recursive
        - cmake --version
        - cmake -Bbuild -H. -G "Visual Studio 15 2017 Win64" -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=dependencies/polly/vs-15-2017-win64.cmake
        - cmake --build build


    # windows cross compile
#    - os: linux
#      services:
#        - docker
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - cmake
#            - wine
#      env:
#        - MATRIX_EVAL="CC=x86_64-w64-mingw32-gcc && CXX=x86_64-w64-mingw32-g++ && AR=x86_64-w64-mingw32-ar"
#        - BUILD_TYPE=windows
#      group: travis_latest
#      dist: trusty
#      language: cpp
#      compiler: mingw


    # linux emscripten
    - os: linux
      services:
        - docker
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - cmake
      env:
        - BUILD_TYPE=emscripten
      group: travis_latest
      dist: trusty
      language: cpp
      compiler: emscripten

      
    # osx native
    - os: osx
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_TYPE=native
      language: cpp
      compiler: clang


before_script:
  - TRAVIS_TAG=`date +%Y-%m-%d`
#  - TRAVIS_TAG=`git tag | grep -v rc | sort -t. -k 1,1n -k 2,2n -k 3,3n -k 4,4n | sed '1!G;h;$!d' | sed -n 1p`
  - uname -a
  - "if [ $TRAVIS_OS_NAME == osx ] && [ $BUILD_TYPE == android ]; then \
        brew update ;
        brew tap caskroom/versions ;
        brew cask install java8 ;
        touch ~/.android/repositories.cfg ;
        brew cask install android-sdk ;
        brew cask install android-ndk ;
        brew install ant ;

        echo \"y\" | sdkmanager \"tools\" \"platform-tools\" \"platforms;android-24\" \"build-tools;24.0.0\"  ;

        export ANDROID_SDK_ROOT=/usr/local/share/android-sdk ;
        export ANDROID_SDK=/usr/local/share/android-sdk ;

        export ANDROID_NDK_HOME=/usr/local/share/android-ndk ;
        export ANDROID_NDK=/usr/local/share/android-ndk ;
        export ANDROID_NDK_r17=/usr/local/share/android-ndk ;

        export ANT_HOME=/usr/local/opt/ant ;
        export MAVEN_HOME=/usr/local/opt/maven ;
        export GRADLE_HOME=/usr/local/opt/gradle ;

        export PATH=$ANT_HOME/bin:$PATH ;
        export PATH=$MAVEN_HOME/bin:$PATH ;
        export PATH=$GRADLE_HOME/bin:$PATH ;

        export PATH=$ANDROID_SDK_ROOT/tools:$PATH ;
        export PATH=$ANDROID_SDK_ROOT/platform-tools:$PATH ;
        export PATH=$ANDROID_SDK_ROOT/platforms/android-24:$PATH ;
        export PATH=$ANDROID_SDK_ROOT/build-tools/24.0.0:$PATH ;

        export PATH=$ANDROID_NDK_HOME:$PATH ;
    fi"
  - "if [ $TRAVIS_OS_NAME == linux ] && [ $BUILD_TYPE == android ]; then \
        wget --quiet --continue http://dl.google.com/android/repository/android-ndk-r12b-linux-x86_64.zip -O ndk.zip;
        unzip -o -q ndk.zip;
        export ANDROID_NDK=`pwd`/android-ndk-r12b;

        wget --quiet --continue http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz;
        tar -xzf android-sdk_r24.4.1-linux.tgz;
        export ANDROID_SDK=`pwd`/android-sdk-linux;
        jdk_switcher use oraclejdk8;

        export ANDROID_HOME=$ANDROID_SDK;
        export PATH=${ANDROID_SDK}/tools:${ANDROID_SDK}/platform-tools:${ANDROID_NDK}:${PATH};
        echo \"y\" | android update sdk -a -u -s -t platform-tools,build-tools-24.0.1,android-22;
    fi"
  - "if [ $TRAVIS_OS_NAME == osx ] && [ $BUILD_TYPE == emscripten ]; then \
        brew update;
        brew install emscripten;
    fi"
  - if [ $TRAVIS_OS_NAME == linux ] && [ $BUILD_TYPE == emscripten ]; then 
      docker run -dit --name emscripten -e TRAVIS_OS_NAME='linux' -e BUILD_TYPE='emscripten' -v `pwd`:/mobagen -w /mobagen trzeci/emscripten bash ;
      docker exec -it emscripten apt-get update ;
      docker exec -it emscripten rm /usr/local/bin/cmake ;
      docker exec -it emscripten apt-get install -y cmake wget ;
    fi

script:
  - if [ $TRAVIS_OS_NAME == linux ] && [ $BUILD_TYPE == emscripten ]; then
      docker exec -it emscripten ./scripts/travis-build.sh ;
      docker exec -it emscripten ./scripts/travis-build.sh ;
    elif [ $BUILD_TYPE == windows ]; then
      echo "tolsta to no windows" ;
    else
      echo "nao eh windows" ;
      ./scripts/travis-build.sh -j9 ;
    fi


before_deploy:
  - echo tolsta $TRAVIS_OS_NAME $BUILD_TYPE $TRAVIS_BRANCH $TRAVIS_TAG

deploy:
  - provider: releases
    api_key:
      secure: MfsqovFmQorr7+r1Y0SlKpfi4SlCCLzkzefCMDDRtnib8h5oWt6ZlNxpQP2EwIx9QVsF3RR+BucRiQ/jc1daeQgBSRjUyTJAFRutigFvNbcoCZ5f3a1VAI1EqmBaDuMKdimtd9KEpYfJhI92tgVz2nf/CmcYYV0ylz5/R5KC8qJbGyhlww8Brcij2s1/yUtiLsupeBsfpmx9t96HcRDCnSD27h5mP3SANeTT1u2NJJtLXLFEmz/Zk6M3ziDKuw7Dvu7fZL7gUH2ofC6+9Q3bSLbTIsSYMbC9gWrdbWNPSWiSK/hd4Y8yB3KwDqLP7jJ/2sLze9NlyDftdGHoazC6Cyq0FmUyQkLUXSH6y7XyzoHuSMhy9Z07HoHRjcm3HxOPE5nfxDDsAKuPcyW9wS5E/Z/MNBHcJdwOacRic+haA88kXvo1Gg5XgayBch5EHYPod6hTdUC7U3y3LW2fmhIvSG8jU+lkkKdb3cY6wd9iGMyJuWjXcvYVMsjCGW5I8hdC4ntWDh0dFAtZd+MStH4mUuuAYBVvBDiVkc8UxF8WP5ZwP3WSwdGm6z867Hg+tI3osqP9yDfuEHWilBJLZQzDE93DyOQtfKabmQHQU6mRUZS0DY2h8z5Tz0GOAI6xmUmNbr16yrPdgDJzqBygpiKFiZUsET+XZEjEnAMUB/h8hhg=
    file: $TRAVIS_BUILD_DIR/win64mingw.zip
    skip_cleanup: true
    on:
      repo: InfiniBrains/mobagen
      condition: $BUILD_TYPE = windows
      os: linux
      branches:
        except:
          - gh-pages

  - provider: releases
    api_key:
      secure: MfsqovFmQorr7+r1Y0SlKpfi4SlCCLzkzefCMDDRtnib8h5oWt6ZlNxpQP2EwIx9QVsF3RR+BucRiQ/jc1daeQgBSRjUyTJAFRutigFvNbcoCZ5f3a1VAI1EqmBaDuMKdimtd9KEpYfJhI92tgVz2nf/CmcYYV0ylz5/R5KC8qJbGyhlww8Brcij2s1/yUtiLsupeBsfpmx9t96HcRDCnSD27h5mP3SANeTT1u2NJJtLXLFEmz/Zk6M3ziDKuw7Dvu7fZL7gUH2ofC6+9Q3bSLbTIsSYMbC9gWrdbWNPSWiSK/hd4Y8yB3KwDqLP7jJ/2sLze9NlyDftdGHoazC6Cyq0FmUyQkLUXSH6y7XyzoHuSMhy9Z07HoHRjcm3HxOPE5nfxDDsAKuPcyW9wS5E/Z/MNBHcJdwOacRic+haA88kXvo1Gg5XgayBch5EHYPod6hTdUC7U3y3LW2fmhIvSG8jU+lkkKdb3cY6wd9iGMyJuWjXcvYVMsjCGW5I8hdC4ntWDh0dFAtZd+MStH4mUuuAYBVvBDiVkc8UxF8WP5ZwP3WSwdGm6z867Hg+tI3osqP9yDfuEHWilBJLZQzDE93DyOQtfKabmQHQU6mRUZS0DY2h8z5Tz0GOAI6xmUmNbr16yrPdgDJzqBygpiKFiZUsET+XZEjEnAMUB/h8hhg=
    file: $TRAVIS_BUILD_DIR/emscripten.zip
    skip_cleanup: true
    on:
      repo: InfiniBrains/mobagen
      condition: $BUILD_TYPE = emscripten
      os: linux
      branches:
        except:
          - gh-pages

  - provider: releases
    api_key:
      secure: MfsqovFmQorr7+r1Y0SlKpfi4SlCCLzkzefCMDDRtnib8h5oWt6ZlNxpQP2EwIx9QVsF3RR+BucRiQ/jc1daeQgBSRjUyTJAFRutigFvNbcoCZ5f3a1VAI1EqmBaDuMKdimtd9KEpYfJhI92tgVz2nf/CmcYYV0ylz5/R5KC8qJbGyhlww8Brcij2s1/yUtiLsupeBsfpmx9t96HcRDCnSD27h5mP3SANeTT1u2NJJtLXLFEmz/Zk6M3ziDKuw7Dvu7fZL7gUH2ofC6+9Q3bSLbTIsSYMbC9gWrdbWNPSWiSK/hd4Y8yB3KwDqLP7jJ/2sLze9NlyDftdGHoazC6Cyq0FmUyQkLUXSH6y7XyzoHuSMhy9Z07HoHRjcm3HxOPE5nfxDDsAKuPcyW9wS5E/Z/MNBHcJdwOacRic+haA88kXvo1Gg5XgayBch5EHYPod6hTdUC7U3y3LW2fmhIvSG8jU+lkkKdb3cY6wd9iGMyJuWjXcvYVMsjCGW5I8hdC4ntWDh0dFAtZd+MStH4mUuuAYBVvBDiVkc8UxF8WP5ZwP3WSwdGm6z867Hg+tI3osqP9yDfuEHWilBJLZQzDE93DyOQtfKabmQHQU6mRUZS0DY2h8z5Tz0GOAI6xmUmNbr16yrPdgDJzqBygpiKFiZUsET+XZEjEnAMUB/h8hhg=
    skip_cleanup: true
    file: $TRAVIS_BUILD_DIR/linux.zip
    on:
      repo: InfiniBrains/mobagen
      condition: $BUILD_TYPE = native
      os: linux
      branches:
        except:
          - gh-pages

  - provider: releases
    api_key:
      secure: MfsqovFmQorr7+r1Y0SlKpfi4SlCCLzkzefCMDDRtnib8h5oWt6ZlNxpQP2EwIx9QVsF3RR+BucRiQ/jc1daeQgBSRjUyTJAFRutigFvNbcoCZ5f3a1VAI1EqmBaDuMKdimtd9KEpYfJhI92tgVz2nf/CmcYYV0ylz5/R5KC8qJbGyhlww8Brcij2s1/yUtiLsupeBsfpmx9t96HcRDCnSD27h5mP3SANeTT1u2NJJtLXLFEmz/Zk6M3ziDKuw7Dvu7fZL7gUH2ofC6+9Q3bSLbTIsSYMbC9gWrdbWNPSWiSK/hd4Y8yB3KwDqLP7jJ/2sLze9NlyDftdGHoazC6Cyq0FmUyQkLUXSH6y7XyzoHuSMhy9Z07HoHRjcm3HxOPE5nfxDDsAKuPcyW9wS5E/Z/MNBHcJdwOacRic+haA88kXvo1Gg5XgayBch5EHYPod6hTdUC7U3y3LW2fmhIvSG8jU+lkkKdb3cY6wd9iGMyJuWjXcvYVMsjCGW5I8hdC4ntWDh0dFAtZd+MStH4mUuuAYBVvBDiVkc8UxF8WP5ZwP3WSwdGm6z867Hg+tI3osqP9yDfuEHWilBJLZQzDE93DyOQtfKabmQHQU6mRUZS0DY2h8z5Tz0GOAI6xmUmNbr16yrPdgDJzqBygpiKFiZUsET+XZEjEnAMUB/h8hhg=
    file: $TRAVIS_BUILD_DIR/osx.zip
    skip_cleanup: true
    on:
      repo: InfiniBrains/mobagen
      condition: $BUILD_TYPE = native
      os: osx
      branches:
        except:
        - gh-pages

  - provider: pages
    skip-cleanup: true
    github-token: $GITHUB_TOKEN
    local-dir: bin-emscripten/bin
    on:
      repo: InfiniBrains/mobagen
      condition: $BUILD_TYPE = emscripten
      branches:
        only:
          - master

notifications:
  slack:
    secure: JF/jKEEB8HW8eoi0NgGvLcLKV/wg/Nf8K4+CLRc+fdvrIN7fTgZv1nzompuSu7TBiJv4o4hqVUAoM0PNRQe/rNtByF1dZN7YO46Z9X9mI882euhEGx99dNZeifgTgiq/e9LaZy8S/5CuX6Wna8s4kNmrYVHOXtrYb1mRKWX8OaLaVni77CvacnUJZ5l0HS9cGTY9fw5ERNrefMnYHWTsXhKeM+BzMt+/uQavg/lBG8VN9yQx6mLi9XAqJSGQcNLti0iczFIirmHgJdTh7EMSrO/Lneo7lT3tx5Ql7tJXHHacRM3Hlsz3zNwKd0ZXunjPKEoY394YWnT/mbKYKAV8e4MJflSmJEwDezY6BhZbeEXLIpFtxoQ+yMoIYMKJczfqd0DY5Y8YlkQvtFBK3WE68Z8rfJG8TqJzdQ0WcaGOIFRUIqB5cyI2O+/Wm/mGD6IUeY4Sjx7dbZmV0ZejZCx3iHFqDjLUClNTT8EktdjAhVrWC3dPuYFzs8FoqiryM8unX4FfBu0uSL1rlbg/ZIKeKaklZJcyLbsi8RVpd+9nqbPdlmVervC/aXwdVXpJL7QCbRmTBlZN1Apn01r15Mv5xih2zjK46dAezkBomXfBnjFsPoFM7r11lZfij/Mj0M0UJb8NYB/ETFuHvlr0gAmCqmym8TeQy+lDcqaNi8ygN0g=
