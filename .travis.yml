matrix:
  include:
    # linux native
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - gcc-6
            - g++-6
            - cmake
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_TYPE=native
      group: travis_latest
      dist: trusty

    # linux emscripten
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
            #- sourceline: 'ppa:george-edison55/cmake-3.x'
          packages:
            #- docker-ce
            #- cmake
            #- cmake-data
      env:
        - BUILD_TYPE=emscripten
      group: travis_latest
      dist: trusty
      
    # osx native
    - os: osx
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_TYPE=native

language: cpp
compiler: clang

before_install:
  # Download and verify alpine-chroot-install script.
  - "if [ $TRAVIS_OS_NAME == linux ] && [ $BUILD_TYPE == emscripten ]; then \
        wget https://raw.githubusercontent.com/alpinelinux/alpine-chroot-install/v0.7.0/alpine-chroot-install && echo '090d323d887ef3a2fd4e752428553f22a52b87bb  alpine-chroot-install' | sha1sum -c ;
    fi"

install:
  - "if [ $TRAVIS_OS_NAME == linux ] && [ $BUILD_TYPE == emscripten ]; then \
        sudo sh alpine-chroot-install -b v3.7 -r 'https://nl.alpinelinux.org/alpine/edge/testing' -p 'emscripten emscripten-libs-asmjs closure-compiler' -k 'CI TRAVIS_.* EM_.*' ;
    fi"

before_script:
  - uname -a
  - "if [ $TRAVIS_OS_NAME == osx ] && [ $BUILD_TYPE == android ]; then \
        brew update;
        brew cask install java;
        brew install android-sdk ant;
        export ANDROID_SDK=/usr/local/opt/android-sdk;

        wget --quiet --continue http://dl.google.com/android/repository/android-ndk-r12b-darwin-x86_64.zip -O ndk.zip;
        unzip -o -q ndk.zip;
        export ANDROID_NDK=`pwd`/android-ndk-r12b;

        export ANDROID_HOME=$ANDROID_SDK;
        export PATH=${ANDROID_SDK}/tools:${ANDROID_SDK}/platform-tools:${ANDROID_NDK}:${PATH};
        echo \"y\" | android update sdk -a -u -s -t platform-tools,build-tools-24.0.1,android-22;
    fi"
  - "if [ $TRAVIS_OS_NAME == linux ] && [ $BUILD_TYPE == android ]; then \
        wget --quiet --continue http://dl.google.com/android/repository/android-ndk-r12b-linux-x86_64.zip -O ndk.zip;
        unzip -o -q ndk.zip;
        export ANDROID_NDK=`pwd`/android-ndk-r12b;

        wget --quiet --continue http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz;
        tar -xzf android-sdk_r24.4.1-linux.tgz;
        export ANDROID_SDK=`pwd`/android-sdk-linux;
        jdk_switcher use oraclejdk8;

        export ANDROID_HOME=$ANDROID_SDK;
        export PATH=${ANDROID_SDK}/tools:${ANDROID_SDK}/platform-tools:${ANDROID_NDK}:${PATH};
        echo \"y\" | android update sdk -a -u -s -t platform-tools,build-tools-24.0.1,android-22;
    fi"
  - "if [ $TRAVIS_OS_NAME == osx ] && [ $BUILD_TYPE == emscripten ]; then \
        brew update;
        brew install emscripten;
    fi"
  - "if [ $TRAVIS_OS_NAME == linux ] && [ $BUILD_TYPE == emscripten ]; then \
      #wget --quiet --continue https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz ;
      #tar -xzf emsdk-portable.tar.gz ;
      #`pwd`/emsdk-portable/emsdk update > /dev/null 2>&1 ;
      #`pwd`/emsdk-portable/emsdk install latest > /dev/null 2>&1 ;
      #`pwd`/emsdk-portable/emsdk activate latest ;
      #source `pwd`/emsdk-portable/emsdk_env.sh ;
    fi"

script:
  - "if [ $TRAVIS_OS_NAME == linux ] && [ $BUILD_TYPE == emscripten ]; then \
      /alpine/enter-chroot -u $USER ./scripts/travis-build.sh ;
    else
      ./scripts/travis-build.sh ;
    fi"
